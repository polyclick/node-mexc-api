{"version":3,"sources":["../src/helpers/utils.ts","../src/modules/base.ts","../src/modules/contract.ts","../src/modules/spot.ts","../src/index.ts"],"names":["Mexc"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nexport const removeEmptyValue = (obj: any) => {\n    if (!(obj instanceof Object)) return {}\n    Object.keys(obj).forEach(key => isEmptyValue(obj[key]) && delete obj[key])\n    return obj\n}\n\nexport const isEmptyValue = (input: any) => {\n    const var1 = (!input && input !== false && input !== 0)\n    // @ts-ignore\n    const var2 = (typeof input === 'string' || input instanceof String) && /^\\s+$/.test(input)\n    const var3 = input instanceof Object && !Object.keys(input).length\n    const var4 = Array.isArray(input) && !input.length\n    return var1 || var2 || var3 || var4;\n}\n\nexport const buildQueryString = (params: any) => {\n    if (!params) return ''\n    // @ts-ignore\n    return Object.entries(params).map((param) => stringifyKeyValuePair(param))\n        .join('&')\n}\n\n// @ts-ignore\nexport const CreateRequest = async (config: any) => {\n    const {method, url, params, apiKey, timestamp, Signature} = config\n    if (method === 'GET' || method === 'DELETE') {\n        const data = await getRequestInstance({\n            headers: {\n                'Content-Type': 'application/json',\n                'ApiKey': apiKey,\n                'Request-Time': timestamp,\n                'Signature': Signature\n            },\n        }).request({\n            method,\n            url,\n            params\n        })\n        return data.data;\n    }\n    if (method === 'POST') {\n        const data = await getRequestInstance({\n            headers: {\n                'Content-Type': 'application/json',\n                'ApiKey': apiKey,\n                'Request-Time': timestamp,\n                'Signature': Signature\n            },\n        }).request({\n            method,\n            url,\n            data: params\n        })\n        return data.data;\n    }\n}\n\n\nexport const stringifyKeyValuePair = ([key, value]: [string, Array<string> | string]) => {\n    const valueString = Array.isArray(value) ? `[\"${value.join('\",\"')}\"]` : value\n    return `${key}=${encodeURIComponent(valueString)}`\n}\n\nexport const getRequestInstance = (config: any) => {\n    return axios.create({\n        ...config\n    })\n}\n\nexport const createRequest = async (config: any) => {\n    const {apiKey, method, url} = config\n    const data = await getRequestInstance({\n        headers: {\n            'Content-Type': 'application/json',\n            'X-MEXC-APIKEY': apiKey,\n        }\n    }).request({\n        method,\n        url\n    })\n    return data.data;\n}\n\nexport const pubRequest = async (config: any) => {\n    const {apiKey, method, url} = config\n    const data = await getRequestInstance({\n        headers: {\n            'Content-Type': 'application/json',\n            'X-MEXC-APIKEY': apiKey,\n        }\n    }).request({\n        method,\n        url\n    })\n    return data.data;\n}\n","import {buildQueryString, createRequest, CreateRequest, pubRequest, removeEmptyValue} from '../helpers/utils'\nimport CryptoJS from \"crypto-js\"\n\n\nexport interface IOptions {\n    apiKey: string,\n    apiSecret: string,\n    type?: 'contract' | 'spot'\n}\n\ntype methodType = 'POST' | 'GET' | 'DELETE'\n\nexport default class Mexc {\n    private readonly apiKey: string;\n    private readonly apiSecret: string;\n\n    constructor(options: IOptions) {\n        const {apiKey, apiSecret} = options\n        this.apiKey = apiKey\n        this.apiSecret = apiSecret\n        return this;\n    }\n\n    publicRequestV3(method: methodType, path: string, params = {}) {\n        params = removeEmptyValue(params)\n        params = buildQueryString(params)\n        if (params !== '') {\n            path = `${path}?${params}`\n        }\n        return createRequest({\n            method: method,\n            url: path,\n            apiKey: this.apiKey\n        })\n    }\n\n    signRequestV3(method: methodType, path: string, params = {}) {\n        params = removeEmptyValue(params)\n        const timestamp = Date.now()\n        const queryString = buildQueryString({...params, timestamp})\n        const signature = CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA256(queryString, this.apiSecret))\n        return createRequest({\n            method: method,\n            url: `${path}?${queryString}&signature=${signature}`,\n            apiKey: this.apiKey\n        })\n    }\n\n    publicRequestV2(method: methodType, path: string, params = {}) {\n        params = removeEmptyValue(params)\n        params = buildQueryString(params)\n        if (params !== '') {\n            path = `${path}?${params}`\n        }\n        return pubRequest({\n            method: method,\n            url: path,\n            apiKey: this.apiKey\n        })\n    }\n\n    signRequestV2(method: methodType, path: string, params = {}) {\n        params = removeEmptyValue(params)\n        const timestamp = Date.now()\n        const apiKey = this.apiKey\n        let objectString = apiKey + timestamp\n\n        if (method === 'POST') {\n            path = `${path}`\n            objectString += JSON.stringify(params)\n        } else {\n            let queryString = buildQueryString({...params})\n            path = `${path}?${queryString}`\n            objectString += queryString\n        }\n        const Signature = CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA256(objectString, this.apiSecret))\n        return CreateRequest({\n            method: method,\n            url: path,\n            apiKey: this.apiKey,\n            timestamp: timestamp,\n            Signature: Signature,\n            params: params\n        })\n    }\n}\n","import Mexc, {IOptions} from \"./base\";\n\nexport default class Contract extends Mexc {\n    private contractBaseUrl:string = 'https://contract.mexc.com/api/v1/';\n    constructor({apiKey, apiSecret}: IOptions) {\n        super({apiKey, apiSecret});\n        return this;\n    }\n\n    serverTime() {\n        return this.publicRequestV3('GET', `${this.contractBaseUrl}contract/ping`)\n    }\n\n    contractDetail() {\n        return this.publicRequestV3('GET', `${this.contractBaseUrl}contract/detail`)\n    }\n\n    supportCurrencies() {\n        return this.publicRequestV3('GET', `${this.contractBaseUrl}contract/support_currencies`)\n    }\n\n    depthBySymbol(params : {symbol: string}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.contractBaseUrl}contract/depth/{symbol}`,\n            params\n        )\n    }\n\n    depthCommitsBySymbol(params: { symbol: string, limit: string}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.contractBaseUrl}contract/depth_commits/{symbol}/{limit}`,\n            params\n        )\n    }\n\n    indexPriceBySymbol(params: { symbol: string}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.contractBaseUrl}contract/index_price/{symbol}`,\n            params\n        )\n    }\n\n    fairPriceBySymbol(params: { symbol: string}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.contractBaseUrl}contract/fair_price/{symbol}`,\n            params\n        )\n    }\n\n    fundingRateBySymbol(params: { symbol: string}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.contractBaseUrl}contract/funding_rate/{symbol}`,\n            params\n        )\n    }\n\n    klineBySymbol(params: { symbol: string}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.contractBaseUrl}contract/kline/{symbol}`,\n            params\n        )\n    }\n\n    indexPriceKlineBySymbol(params: { symbol: string}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.contractBaseUrl}contract/kline/index_price/{symbol}`,\n            params\n        )\n    }\n\n    fairPriceKlineBySymbol(params: { symbol: string}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.contractBaseUrl}contract/kline/fair_price/{symbol}`,\n            params\n        )\n    }\n\n    dealsBySymbol(params: { symbol: string}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.contractBaseUrl}contract/deals/{symbol}`,\n            params\n        )\n    }\n\n    ticker(params: { symbol?: string}) {\n        return this.publicRequestV3('GET', `${this.contractBaseUrl}contract/ticker`, params)\n    }\n\n    riskReverse(params: { symbol?: string}) {\n        return this.publicRequestV3('GET', `${this.contractBaseUrl}contract/risk_reverse`, params)\n    }\n\n    riskReverseHistory(params: { symbol: string, page_num: string, page_size: string}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.contractBaseUrl}contract/risk_reverse/history`,\n            params\n        )\n    }\n\n    fundingRateHistory(params: { symbol: string, page_num: string, page_size: string}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.contractBaseUrl}contract/funding_rate/history`,\n            params\n        )\n    }\n\n    assets() {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/account/assets`,\n        )\n    }\n\n    assetByCurrency(params: {currency: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/account/asset/{currency}`,\n            params\n        )\n    }\n\n    transferRecord(params : {page_num:string, page_start:string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/account/transfer_record`,\n            params\n        )\n    }\n\n    historyPositions(params : {page_num:string, page_start:string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/position/list/history_positions`,\n            params\n        )\n    }\n\n    openPositions(params: { symbol: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/position/open_positions`,\n            params\n        )\n    }\n\n    fundingRecords(params: {symbol?: string, position_id?: string, page_num: string, page_size: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/position/funding_records`,\n            params\n        )\n    }\n\n    openOrders(params: {symbol: string, page_num:string, page_size: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/order/list/open_orders/{symbol}`,\n            params\n        )\n    }\n\n    historyOrders(params: {symbol: string, states: string, category: number, start_time: string, end_time: string, side: string, page_num: string, page_size: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/order/list/history_orders`,\n            params\n        )\n    }\n\n    externalByExternalOid(params: {symbol: string, external_oid: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/order/external/{symbol}/{external_oid}`,\n            params\n        )\n    }\n\n    queryOrderById(params: {order_id: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/order/get/{order_id}`,\n            params\n        )\n    }\n\n    batchQueryById(params: {order_ids: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/order/batch_query`,\n            params\n        )\n    }\n\n    dealDetails(params: {order_id: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/order/deal_details/{order_id}`,\n            params\n        )\n    }\n\n    orderDeals(params : {symbol: string, start_time: string, end_time: string, page_num:string, page_size: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/order/list/order_deals`,\n            params\n        )\n    }\n\n    planOrder(params : {symbol: string, states: string, start_time: string, end_time: string, page_num:string, page_size: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/planorder/list/orders`,\n            params\n        )\n    }\n\n    stopOrder(params : {symbol: string, is_finished: string, start_time: string, end_time: string, page_num:string, page_size: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/stoporder/list/orders`,\n            params\n        )\n    }\n\n    riskLimit(params: {symbol: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/account/risk_limit`,\n            params\n        )\n    }\n\n    tieredFeeRate(params: {symbol: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/account/tiered_fee_rate`,\n            params\n        )\n    }\n\n    changeMargin(params: {positionId: string, amount: string, type: string}) {\n        return this.signRequestV2(\n            'POST',\n            `${this.contractBaseUrl}private/position/change_margin`,\n            params\n        )\n    }\n\n    leverage(params: {symbol: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/position/leverage`,\n            params\n        )\n    }\n\n    changeLeverage(params: {positionId: string, leverage: string, openType: string, symbol: string, positionType: string}) {\n        return this.signRequestV2(\n            'POST',\n            `${this.contractBaseUrl}private/position/change_leverage`,\n            params\n        )\n    }\n\n    getPositionMode() {\n        return this.signRequestV2(\n            'GET',\n            `${this.contractBaseUrl}private/position/position_mode`\n        )\n    }\n\n    changePositionMode(params: {positionMode: 1 | 2}) {\n        return this.signRequestV2(\n            'POST',\n            `${this.contractBaseUrl}private/position/change_position_mode`,\n            params\n        )\n    }\n\n    //data\n    placeNewOrder(params: {symbol: string, price: string, vol: string, leverage: string, side: string, type: string, openType: string, positionId: string, externalOid: string, stopLossPrice: string, takeProfitPrice: string, positionMode: string, reduceOnly: string}) {\n        return this.signRequestV2(\n            'POST',\n            `${this.contractBaseUrl}private/order/submit`,\n            params\n        )\n    }\n\n    //data\n    placeNewOrderBatch(params: {symbol: string, price: string, vol: string, leverage: string, side: string, type: string, openType: string, positionId: string, externalOid: string, stopLossPrice: string, takeProfitPrice: string, positionMode: string, reduceOnly: string}[]) {\n        return this.signRequestV2(\n            'POST',\n            `${this.contractBaseUrl}private/order/submit_batch`,\n            params\n        )\n    }\n\n    //data\n    cancelOrderById(params: string[]) {\n        return this.signRequestV2(\n            'POST',\n            `${this.contractBaseUrl}private/order/cancel`,\n            params\n        )\n    }\n\n    cancelWithExternal(params: {symbol: string, externalOid: string}) {\n        return this.signRequestV2(\n            'POST',\n            `${this.contractBaseUrl}private/order/cancel_with_external`,\n            params\n        )\n    }\n\n    cancelAll(params: {symbol: string}) {\n        return this.signRequestV2(\n            'POST',\n            `${this.contractBaseUrl}private/order/cancel_all`,\n            params\n        )\n    }\n\n    cancelPlanOrder(params: string[]) {\n        return this.signRequestV2(\n            'POST',\n            `${this.contractBaseUrl}private/planorder/cancel`,\n            params\n        )\n    }\n\n    cancelAllPlanOrder(params: { symbol: string}) {\n        return this.signRequestV2(\n            'POST',\n            `${this.contractBaseUrl}private/planorder/cancel_all`,\n            params\n        )\n    }\n\n    cancelStopOrder(params: { stopPlanOrderId: string}) {\n        return this.signRequestV2(\n            'POST',\n            `${this.contractBaseUrl}private/stoporder/cancel`,\n            params\n        )\n    }\n\n    cancelAllStopOrder(params: { symbol: string, positionId: string}) {\n        return this.signRequestV2(\n            'POST',\n            `${this.contractBaseUrl}private/stoporder/cancel_all`,\n            params\n        )\n    }\n\n    stopOrderChangePrice(params: {orderId:string, stopLossPrice: string, takeProfitPrice: string}) {\n        return this.signRequestV2(\n            'POST',\n            `${this.contractBaseUrl}private/stoporder/change_price`,\n            params\n        )\n    }\n\n    stopOrderChangePlanPrice(params: {stopPlanOrderId: string, stopLossPrice: string, takeProfitPrice: string}) {\n        return this.signRequestV2(\n            'POST',\n            `${this.contractBaseUrl}private/stoporder/change_plan_price`,\n            params\n        )\n    }\n}\n","import Mexc, {IOptions} from \"./base\";\n\nexport default class Spot extends Mexc {\n    spotBaseUrlV2:string='https://www.mexc.com/open/api/v2/';\n    spotBaseUrlV3:string='https://api.mexc.com/api/v3/';\n    constructor({apiKey, apiSecret}: IOptions) {\n        super({apiKey, apiSecret});\n        return this;\n    }\n\n    symbols(params:{ symbol: string}) {\n        return this.publicRequestV2('GET', `${this.spotBaseUrlV2}market/symbols`, params)\n    }\n\n    serverTime() {\n        return this.publicRequestV2('GET', `${this.spotBaseUrlV2}common/timestamp`)\n    }\n\n    ping() {\n        return this.publicRequestV2('GET', `${this.spotBaseUrlV2}common/ping`)\n    }\n\n    defaultSymbols() {\n        return this.publicRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}market/api_default_symbols`\n        )\n    }\n\n    ticker(params:{ symbol?: string}) {\n        return this.publicRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}market/ticker`,\n            params\n        )\n    }\n\n    depthV2(params:{ symbol?: string, depth?: number}) {\n        return this.publicRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}market/depth`,\n            params\n        )\n    }\n\n    deals(params:{ symbol: string, limit?: number}) {\n        return this.publicRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}market/deals`,\n            params\n        )\n    }\n\n    klineV2(params:{ symbol: string, interval: string, start_time?: string, limit: string}) {\n        return this.publicRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}market/kline`,\n            params\n        )\n    }\n\n    coinList(params:{ currency?: string }) {\n        return this.publicRequestV2('GET', `${this.spotBaseUrlV2}market/coin/list`, params)\n    }\n\n    account() {\n        return this.signRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}account/info`\n        )\n    }\n\n    apiAccount() {\n        return this.signRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}market/api_symbols`\n        )\n    }\n\n    placeOrder(params: {client_order_id?:string, order_type: string, price: string, quantity: string, symbol: string, trade_type: string}) {\n        return this.signRequestV2(\n            'POST',\n            `${this.spotBaseUrlV2}order/place`,\n            params\n        )\n    }\n\n    cancelOrderV2(params: {order_ids: string, client_order_ids: string}) {\n        return this.signRequestV2(\n            'DELETE',\n            `${this.spotBaseUrlV2}order/cancel`,\n            params\n        )\n    }\n\n    // data\n    multiPlaceOrder(params: {order_type: string, price: string, quantity: string, symbol: string, trade_type: string}[]) {\n        return this.signRequestV2(\n            'POST',\n            `${this.spotBaseUrlV2}order/place_batch`,\n            params\n        )\n    }\n\n    getOpenOrder(params: {symbol: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}order/open_orders`,\n            params\n        )\n    }\n\n    getAllOrder(params: {states: string, symbol: string, trade_type: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}order/list`,\n            params\n        )\n    }\n\n    queryOrderById(params:{order_ids: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}order/query`,\n            params\n        )\n    }\n\n    getOrderDeal(params : {limit: string, start_time: string, symbol: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}order/deals`,\n            params\n        )\n    }\n\n    queryOrderDealById(params: {order_id: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}order/deal_detail`,\n            params\n        )\n    }\n\n    cancelBySymbol(params: {symbol: string}) {\n        return this.signRequestV2(\n            'DELETE',\n            `${this.spotBaseUrlV2}order/cancel_by_symbol`,\n            params\n        )\n    }\n\n    getDepositList(params: {currency: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}asset/deposit/address/list`,\n            params\n        )\n    }\n\n    getDepositRecord(params: {currency: string,start_time: string, end_time: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}asset/deposit/list`,\n            params\n        )\n    }\n\n    getWithdrawList(params: {start_time: string, end_time: string, withdraw_id: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}asset/withdraw/list`,\n            params\n        )\n    }\n\n    withdraw(params: {currency: string, chain: string, amount: string, address: string}) {\n        return this.signRequestV2(\n            'POST',\n            `${this.spotBaseUrlV2}asset/withdraw`,\n            params\n        )\n    }\n\n    transFer(params: {sub_uid: string, currency: string, amount: string, type: string}) {\n        return this.signRequestV2(\n            'POST',\n            `${this.spotBaseUrlV2}asset/internal/transfer`,\n            params\n        )\n    }\n\n    getTransferRecord(params: {start_time: string, end_time: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}asset/internal/transfer/record`,\n            params\n        )\n    }\n\n    getAvlTransfer(params: {currency: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}account/balance`,\n            params\n        )\n    }\n\n    queryTransferRecordById(params : {transact_id: string}) {\n        return this.signRequestV2(\n            'GET',\n            `${this.spotBaseUrlV2}asset/internal/transfer/info`,\n            params\n        )\n    }\n\n    pingV3() {\n        return this.publicRequestV3('GET', `${this.spotBaseUrlV3}ping`)\n    }\n\n    serverTimeV3() {\n        return this.publicRequestV3('GET', `${this.spotBaseUrlV3}time`)\n    }\n\n    exchangeInformation() {\n        return this.publicRequestV3('GET', `${this.spotBaseUrlV3}exchangeInfo`)\n    }\n\n    depth(params: {symbol: string, limit?: number}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.spotBaseUrlV3}depth`,\n            params\n        )\n    }\n\n    recentTradesList(params: {symbol: string}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.spotBaseUrlV3}trades`,\n            params\n        )\n    }\n\n    oldTradeLookup(params: {symbol: string}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.spotBaseUrlV3}historicalTrades`,\n            params\n        )\n    }\n\n    compressedTradesList(params: {symbol: string}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.spotBaseUrlV3}aggTrades`,\n            params\n        )\n    }\n\n    kline(params: {symbol: string, interval: string, startTime?: number, endTime?: number, limit?: number}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.spotBaseUrlV3}klines`,\n            params\n        )\n    }\n\n    currentAveragePrice(params: {symbol: string}) {\n        return this.publicRequestV3(\n            'GET',\n            `${this.spotBaseUrlV3}avgPrice`,\n            params\n        )\n    }\n\n    tickerPriceChange() {\n        return this.publicRequestV3('GET', `${this.spotBaseUrlV3}ticker/24hr`)\n    }\n\n    symbolPriceTicker() {\n        return this.publicRequestV3('GET', `${this.spotBaseUrlV3}ticker/price`)\n    }\n\n    symbolOrderBook() {\n        return this.publicRequestV3('GET', `${this.spotBaseUrlV3}ticker/bookTicker`)\n    }\n\n    etfInfo() {\n        return this.publicRequestV3('GET', `${this.spotBaseUrlV3}etf/info`)\n    }\n\n    testConnectivity(params: {symbol:string, side: string, type: string, quantity: string, price: string}) {\n        return this.signRequestV3(\n            'POST',\n            `${this.spotBaseUrlV3}order/test`,\n            params\n        )\n    }\n\n    order(params: {symbol:string, side: string, type: string, quantity: string, price: string, quoteOrderQty: string}) {\n        return this.signRequestV3(\n            'POST',\n            `${this.spotBaseUrlV3}order`,\n            params\n        )\n    }\n\n    cancelOrder(params : {symbol: string, orderId: string}) {\n        return this.signRequestV3(\n            'DELETE',\n            `${this.spotBaseUrlV3}order`,\n            params\n        )\n    }\n\n    cancelAllOpenOrders(params: {symbol: string}) {\n        return this.signRequestV3(\n            'DELETE',\n            `${this.spotBaseUrlV3}openOrders`,\n            params\n        )\n    }\n\n    queryOrder(params: {symbol: string, orderId: string}) {\n        return this.signRequestV3(\n            'GET',\n            `${this.spotBaseUrlV3}order`,\n            params\n        )\n    }\n\n    currentOpenOrders(params: {symbol: string}) {\n        return this.signRequestV3(\n            'GET',\n            `${this.spotBaseUrlV3}openOrders`,\n            params\n        )\n    }\n\n    allOrders(params: {symbol: string}) {\n        return this.signRequestV3(\n            'GET',\n            `${this.spotBaseUrlV3}allOrders`,\n            params\n        )\n    }\n\n    accountInformation() {\n        return this.signRequestV3(\n            'GET',\n            `${this.spotBaseUrlV3}account`\n        )\n    }\n\n    accountTradeList(params: {symbol: string}) {\n        return this.signRequestV3(\n            'GET',\n            `${this.spotBaseUrlV3}myTrades`,\n            params\n        )\n    }\n}\n","import {IOptions} from \"./modules/base\";\nimport Contract from \"./modules/contract\";\nimport Spot from \"./modules/spot\";\n\nexport default class Mexc {\n    spot: Spot;\n    contract: Contract;\n\n    constructor(options: IOptions) {\n        this.spot = new Spot(options) as Spot;\n        this.contract = new Contract(options) as Contract;\n        return this as { spot : Spot, contract: Contract};\n    }\n}\n"]}